// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Driver {
  id                Int       @id @default(autoincrement())
  name              String
  cpf               String    @unique
  cnh               String?   @unique
  cnhCategory       String?
  cnhExpiration     DateTime?
  phone             String?
  address           String?
  position          String?
  toxicologicalDate DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@map("drivers")
}

model Vehicle {
  id                Int      @id @default(autoincrement())
  plate             String   @unique
  model             String
  type              String
  manufacturingYear Int?
  modelYear         Int?
  observation       String?
  color             String?
  fuelType          String?
  mileage           Float?
  utility           String?
  classification    Int?
  registration      String
  chassi            String?  @unique
  renavam           String?  @unique
  fleet             Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  Alerts            Alerts[]
  Tire              Tire[]

  @@map("vehicles")
}

model Maintenance {
  id          Int      @id @default(autoincrement())
  invoiceDate DateTime
  invoiceId   Int
  issuer      String
  date        DateTime
  plate       String
  description String
  quantity    Float
  value       Float
  totalCost   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("maintenances")
}

model Fuel {
  id          Int      @id @default(autoincrement())
  invoiceId   Int
  issuer      String
  invoiceDate DateTime
  date        DateTime
  plate       String
  kilometers  Int
  fuelType    String
  quantity    Float
  unitCost    Float
  totalCost   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("fuels")
}

model Alerts {
  id          Int       @id @default(autoincrement())
  vehicleId   Int
  vehicle     Vehicle   @relation(fields: [vehicleId], references: [id])
  type        String
  description String?
  value       Float?
  dueDate     DateTime?
  kmAlert     Int
  isCompleted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("alerts")
}

model Tire {
  id        Int      @id
  vehicleId Int?
  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  position  String?
  brand     String
  model     String?
  size      String?
  pressure  Float?
  mileage   Float?
}
